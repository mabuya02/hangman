# GitHub Actions workflow for testing and linting a Python package across multiple Python versions
# For more information, visit: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python Package CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    # Checkout the repository
    - name: Check out the repository
      uses: actions/checkout@v4

    # Set up Python with matrix version
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    # Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; else echo "No requirements.txt found."; fi
        pip install pytest --upgrade
        python -m pip install flake8 pytest

    # Run lint checks with flake8
    - name: Lint Python code with flake8
      run: |
        # Check for Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Continue with warnings for other issues and enforce code quality thresholds
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    # Check pytest version before running tests
    - name: Check pytest version
      run: pytest --version

    # Run tests with pytest
    - name: Run tests with pytest
      run: |
        pytest --max-fail=5 --disable-warnings
